<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.leokenzley</groupId>
	<artifactId>openapiswagger</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>openapiswagger</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
			<!-- Dependência para o Spring Boot Web -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
			</dependency>
		
			<!-- Dependência para testes -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<scope>test</scope>
			</dependency>
		
			<!-- Dependência para o Jackson (serialização/deserialização JSON) -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
			</dependency>
		
			<!-- Dependência para validação (se o código gerado usar validações) -->
			<dependency>
				<groupId>jakarta.validation</groupId>
				<artifactId>jakarta.validation-api</artifactId>
				<version>3.0.2</version> <!-- Use a versão mais recente -->
			</dependency>
		
			<!-- Dependência para o Springdoc OpenAPI (opcional, para documentação da API) -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>1.7.0</version> <!-- Use a versão mais recente -->
			</dependency>
			<dependency>
				<groupId>jakarta.servlet</groupId>
				<artifactId>jakarta.servlet-api</artifactId>
				<version>5.0.0</version> <!-- Use a versão mais recente -->
				<scope>provided</scope>
			</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.4</version> <!-- Use a versão mais recente -->
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>8.0.0.Final</version> <!-- Use a versão mais recente -->
		</dependency>
	</dependencies>

	<build>
		<plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.11.0</version>
            <configuration>
                <source>21</source>
                <target>21</target>
            </configuration>
        </plugin>
		<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.6.0</version> <!-- Use a versão mais recente -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/swagger.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<output>${project.basedir}/target/generated-sources/openapi</output>
							<apiPackage>com.leokenzley.openapiswagger.api</apiPackage>
							<modelPackage>com.leokenzley.openapiswagger.model</modelPackage>
							<configOptions>
								<useJakartaEe>true</useJakartaEe> <!-- Usa pacotes Jakarta EE (ex.: jakarta.servlet) em vez de javax.* -->
								<interfaceOnly>true</interfaceOnly> <!-- Gera apenas as interfaces, sem classes de implementação -->
								<skipDefaultInterface>true</skipDefaultInterface> <!-- Remove métodos default das interfaces geradas -->
								<dateLibrary>java8</dateLibrary> <!-- Usa bibliotecas de data do Java 8 (ex.: java.time.LocalDate) -->
								<delegatePattern>false</delegatePattern> <!-- Não usa o padrão de delegação (gera métodos diretamente nas interfaces) -->
								<requestMappingMode>api_interface</requestMappingMode> <!-- Gera mapeamentos de requisição diretamente nas interfaces -->
								<openApiNullable>false</openApiNullable> <!-- Não usa o suporte a tipos anuláveis do OpenAPI -->
								<generateBuilders>true</generateBuilders> <!-- Gera métodos "builder" para os modelos (facilita a criação de objetos) -->
								<serializableModel>true</serializableModel> <!-- Faz com que os modelos gerados implementem a interface Serializable -->
								<useBeanValidation>true</useBeanValidation> <!-- Adiciona anotações de validação (ex.: @NotNull, @Size) nos modelos -->
								<performBeanValidation>true</performBeanValidation> <!-- Habilita validação de bean nos parâmetros de entrada da API -->
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		    <resources>
        <resource>
            <directory>src/main/resources</directory>
        </resource>
    </resources>
	</build>
</project>
